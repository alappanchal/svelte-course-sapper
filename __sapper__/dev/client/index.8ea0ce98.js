import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, t as text, c as claim_element, a as children, b as claim_text, f as detach_dev, g as attr_dev, h as add_location, j as insert_dev, k as append_dev, l as set_data_dev, m as space, n as claim_space, o as noop, p as bubble, q as toggle_class, r as listen_dev, u as prop_dev, w as run_all, x as identity, y as create_slot, z as createEventDispatcher, A as create_component, B as claim_component, C as mount_component, D as transition_in, E as transition_out, F as destroy_component, G as update_slot, H as add_render_callback, I as create_bidirectional_transition, J as writable, K as globals, L as prevent_default, M as group_outros, N as check_outros, O as is_function, P as onMount, Q as onDestroy, R as empty, T as query_selector_all, U as validate_each_argument, V as validate_each_keys, W as fix_position, X as add_transform, Y as create_animation, Z as update_keyed_each, _ as fix_and_outro_and_destroy_block } from './client.76baada2.js';
import { B as Button } from './Button.37df9ffc.js';

/* src\components\UI\TextInput.svelte generated by Svelte v3.35.0 */

const file = "src\\components\\UI\\TextInput.svelte";

// (62:4) {:else}
function create_else_block(ctx) {
	let input;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			input = element("input");
			this.h();
		},
		l: function claim(nodes) {
			input = claim_element(nodes, "INPUT", {
				type: true,
				id: true,
				value: true,
				class: true
			});

			this.h();
		},
		h: function hydrate() {
			attr_dev(input, "type", /*type*/ ctx[4]);
			attr_dev(input, "id", /*id*/ ctx[1]);
			input.value = /*value*/ ctx[3];
			attr_dev(input, "class", "svelte-sc5id5");
			toggle_class(input, "invalid", !/*valid*/ ctx[6] && /*touched*/ ctx[8]);
			add_location(input, file, 62, 8, 1395);
		},
		m: function mount(target, anchor) {
			insert_dev(target, input, anchor);

			if (!mounted) {
				dispose = [
					listen_dev(input, "input", /*input_handler_1*/ ctx[10], false, false, false),
					listen_dev(input, "blur", /*blur_handler_1*/ ctx[12], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*type*/ 16) {
				attr_dev(input, "type", /*type*/ ctx[4]);
			}

			if (dirty & /*id*/ 2) {
				attr_dev(input, "id", /*id*/ ctx[1]);
			}

			if (dirty & /*value*/ 8 && input.value !== /*value*/ ctx[3]) {
				prop_dev(input, "value", /*value*/ ctx[3]);
			}

			if (dirty & /*valid, touched*/ 320) {
				toggle_class(input, "invalid", !/*valid*/ ctx[6] && /*touched*/ ctx[8]);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(input);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(62:4) {:else}",
		ctx
	});

	return block;
}

// (60:4) {#if controlType === "textarea"}
function create_if_block_1(ctx) {
	let textarea;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			textarea = element("textarea");
			this.h();
		},
		l: function claim(nodes) {
			textarea = claim_element(nodes, "TEXTAREA", {
				row: true,
				id: true,
				value: true,
				class: true
			});

			children(textarea).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(textarea, "row", /*rows*/ ctx[5]);
			attr_dev(textarea, "id", /*id*/ ctx[1]);
			textarea.value = /*value*/ ctx[3];
			attr_dev(textarea, "class", "svelte-sc5id5");
			toggle_class(textarea, "invalid", !/*valid*/ ctx[6] && /*touched*/ ctx[8]);
			add_location(textarea, file, 60, 8, 1241);
		},
		m: function mount(target, anchor) {
			insert_dev(target, textarea, anchor);

			if (!mounted) {
				dispose = [
					listen_dev(textarea, "input", /*input_handler*/ ctx[9], false, false, false),
					listen_dev(textarea, "blur", /*blur_handler*/ ctx[11], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*rows*/ 32) {
				attr_dev(textarea, "row", /*rows*/ ctx[5]);
			}

			if (dirty & /*id*/ 2) {
				attr_dev(textarea, "id", /*id*/ ctx[1]);
			}

			if (dirty & /*value*/ 8) {
				prop_dev(textarea, "value", /*value*/ ctx[3]);
			}

			if (dirty & /*valid, touched*/ 320) {
				toggle_class(textarea, "invalid", !/*valid*/ ctx[6] && /*touched*/ ctx[8]);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(textarea);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(60:4) {#if controlType === \\\"textarea\\\"}",
		ctx
	});

	return block;
}

// (66:4) {#if !valid && validatyMessage && touched }
function create_if_block(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text(/*validatyMessage*/ ctx[7]);
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, /*validatyMessage*/ ctx[7]);
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "error-message svelte-sc5id5");
			add_location(p, file, 66, 8, 1600);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*validatyMessage*/ 128) set_data_dev(t, /*validatyMessage*/ ctx[7]);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(66:4) {#if !valid && validatyMessage && touched }",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let label_1;
	let t0;
	let t1;
	let t2;

	function select_block_type(ctx, dirty) {
		if (/*controlType*/ ctx[0] === "textarea") return create_if_block_1;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx);
	let if_block0 = current_block_type(ctx);
	let if_block1 = !/*valid*/ ctx[6] && /*validatyMessage*/ ctx[7] && /*touched*/ ctx[8] && create_if_block(ctx);

	const block = {
		c: function create() {
			div = element("div");
			label_1 = element("label");
			t0 = text(/*label*/ ctx[2]);
			t1 = space();
			if_block0.c();
			t2 = space();
			if (if_block1) if_block1.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			label_1 = claim_element(div_nodes, "LABEL", { for: true, class: true });
			var label_1_nodes = children(label_1);
			t0 = claim_text(label_1_nodes, /*label*/ ctx[2]);
			label_1_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			if_block0.l(div_nodes);
			t2 = claim_space(div_nodes);
			if (if_block1) if_block1.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(label_1, "for", /*id*/ ctx[1]);
			attr_dev(label_1, "class", "svelte-sc5id5");
			add_location(label_1, file, 58, 4, 1160);
			attr_dev(div, "class", "form-control svelte-sc5id5");
			add_location(div, file, 57, 0, 1128);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, label_1);
			append_dev(label_1, t0);
			append_dev(div, t1);
			if_block0.m(div, null);
			append_dev(div, t2);
			if (if_block1) if_block1.m(div, null);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*label*/ 4) set_data_dev(t0, /*label*/ ctx[2]);

			if (dirty & /*id*/ 2) {
				attr_dev(label_1, "for", /*id*/ ctx[1]);
			}

			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block0) {
				if_block0.p(ctx, dirty);
			} else {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);

				if (if_block0) {
					if_block0.c();
					if_block0.m(div, t2);
				}
			}

			if (!/*valid*/ ctx[6] && /*validatyMessage*/ ctx[7] && /*touched*/ ctx[8]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					if_block1.m(div, null);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if_block0.d();
			if (if_block1) if_block1.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("TextInput", slots, []);
	let { controlType = null } = $$props;
	let { id } = $$props;
	let { label } = $$props;
	let { value } = $$props;
	let { type = "text" } = $$props;
	let { rows = null } = $$props;
	let { valid = true } = $$props;
	let { validatyMessage = "" } = $$props;
	let touched = false;

	const writable_props = [
		"controlType",
		"id",
		"label",
		"value",
		"type",
		"rows",
		"valid",
		"validatyMessage"
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<TextInput> was created with unknown prop '${key}'`);
	});

	function input_handler(event) {
		bubble($$self, event);
	}

	function input_handler_1(event) {
		bubble($$self, event);
	}

	const blur_handler = () => $$invalidate(8, touched = true);
	const blur_handler_1 = () => $$invalidate(8, touched = true);

	$$self.$$set = $$props => {
		if ("controlType" in $$props) $$invalidate(0, controlType = $$props.controlType);
		if ("id" in $$props) $$invalidate(1, id = $$props.id);
		if ("label" in $$props) $$invalidate(2, label = $$props.label);
		if ("value" in $$props) $$invalidate(3, value = $$props.value);
		if ("type" in $$props) $$invalidate(4, type = $$props.type);
		if ("rows" in $$props) $$invalidate(5, rows = $$props.rows);
		if ("valid" in $$props) $$invalidate(6, valid = $$props.valid);
		if ("validatyMessage" in $$props) $$invalidate(7, validatyMessage = $$props.validatyMessage);
	};

	$$self.$capture_state = () => ({
		controlType,
		id,
		label,
		value,
		type,
		rows,
		valid,
		validatyMessage,
		touched
	});

	$$self.$inject_state = $$props => {
		if ("controlType" in $$props) $$invalidate(0, controlType = $$props.controlType);
		if ("id" in $$props) $$invalidate(1, id = $$props.id);
		if ("label" in $$props) $$invalidate(2, label = $$props.label);
		if ("value" in $$props) $$invalidate(3, value = $$props.value);
		if ("type" in $$props) $$invalidate(4, type = $$props.type);
		if ("rows" in $$props) $$invalidate(5, rows = $$props.rows);
		if ("valid" in $$props) $$invalidate(6, valid = $$props.valid);
		if ("validatyMessage" in $$props) $$invalidate(7, validatyMessage = $$props.validatyMessage);
		if ("touched" in $$props) $$invalidate(8, touched = $$props.touched);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		controlType,
		id,
		label,
		value,
		type,
		rows,
		valid,
		validatyMessage,
		touched,
		input_handler,
		input_handler_1,
		blur_handler,
		blur_handler_1
	];
}

class TextInput extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance, create_fragment, safe_not_equal, {
			controlType: 0,
			id: 1,
			label: 2,
			value: 3,
			type: 4,
			rows: 5,
			valid: 6,
			validatyMessage: 7
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "TextInput",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*id*/ ctx[1] === undefined && !("id" in props)) {
			console.warn("<TextInput> was created without expected prop 'id'");
		}

		if (/*label*/ ctx[2] === undefined && !("label" in props)) {
			console.warn("<TextInput> was created without expected prop 'label'");
		}

		if (/*value*/ ctx[3] === undefined && !("value" in props)) {
			console.warn("<TextInput> was created without expected prop 'value'");
		}
	}

	get controlType() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set controlType(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get id() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get label() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set label(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get value() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set value(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get type() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set type(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get rows() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set rows(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get valid() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set valid(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get validatyMessage() {
		throw new Error("<TextInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set validatyMessage(value) {
		throw new Error("<TextInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

function cubicOut(t) {
    const f = t - 1.0;
    return f * f * f + 1.0;
}

function fade(node, { delay = 0, duration = 400, easing = identity } = {}) {
    const o = +getComputedStyle(node).opacity;
    return {
        delay,
        duration,
        easing,
        css: t => `opacity: ${t * o}`
    };
}
function fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {
    const style = getComputedStyle(node);
    const target_opacity = +style.opacity;
    const transform = style.transform === 'none' ? '' : style.transform;
    const od = target_opacity * (1 - opacity);
    return {
        delay,
        duration,
        easing,
        css: (t, u) => `
			transform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);
			opacity: ${target_opacity - (od * u)}`
    };
}
function slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {
    const style = getComputedStyle(node);
    const opacity = +style.opacity;
    const height = parseFloat(style.height);
    const padding_top = parseFloat(style.paddingTop);
    const padding_bottom = parseFloat(style.paddingBottom);
    const margin_top = parseFloat(style.marginTop);
    const margin_bottom = parseFloat(style.marginBottom);
    const border_top_width = parseFloat(style.borderTopWidth);
    const border_bottom_width = parseFloat(style.borderBottomWidth);
    return {
        delay,
        duration,
        easing,
        css: t => 'overflow: hidden;' +
            `opacity: ${Math.min(t * 20, 1) * opacity};` +
            `height: ${t * height}px;` +
            `padding-top: ${t * padding_top}px;` +
            `padding-bottom: ${t * padding_bottom}px;` +
            `margin-top: ${t * margin_top}px;` +
            `margin-bottom: ${t * margin_bottom}px;` +
            `border-top-width: ${t * border_top_width}px;` +
            `border-bottom-width: ${t * border_bottom_width}px;`
    };
}
function scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {
    const style = getComputedStyle(node);
    const target_opacity = +style.opacity;
    const transform = style.transform === 'none' ? '' : style.transform;
    const sd = 1 - start;
    const od = target_opacity * (1 - opacity);
    return {
        delay,
        duration,
        easing,
        css: (_t, u) => `
			transform: ${transform} scale(${1 - (sd * u)});
			opacity: ${target_opacity - (od * u)}
		`
    };
}

/* src\components\UI\Modal.svelte generated by Svelte v3.35.0 */
const file$1 = "src\\components\\UI\\Modal.svelte";
const get_footer_slot_changes = dirty => ({});
const get_footer_slot_context = ctx => ({});

// (71:12) <Button on:click="{closeModal}">
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Close");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Close");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(71:12) <Button on:click=\\\"{closeModal}\\\">",
		ctx
	});

	return block;
}

// (70:29)               
function fallback_block(ctx) {
	let button;
	let current;

	button = new Button({
			props: {
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button.$on("click", /*closeModal*/ ctx[1]);

	const block = {
		c: function create() {
			create_component(button.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(button.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(button, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const button_changes = {};

			if (dirty & /*$$scope*/ 8) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(button, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: fallback_block.name,
		type: "fallback",
		source: "(70:29)               ",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let div0;
	let div0_transition;
	let t0;
	let div2;
	let h1;
	let t1;
	let t2;
	let div1;
	let t3;
	let footer;
	let div2_transition;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[2].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[3], null);
	const footer_slot_template = /*#slots*/ ctx[2].footer;
	const footer_slot = create_slot(footer_slot_template, ctx, /*$$scope*/ ctx[3], get_footer_slot_context);
	const footer_slot_or_fallback = footer_slot || fallback_block(ctx);

	const block = {
		c: function create() {
			div0 = element("div");
			t0 = space();
			div2 = element("div");
			h1 = element("h1");
			t1 = text(/*title*/ ctx[0]);
			t2 = space();
			div1 = element("div");
			if (default_slot) default_slot.c();
			t3 = space();
			footer = element("footer");
			if (footer_slot_or_fallback) footer_slot_or_fallback.c();
			this.h();
		},
		l: function claim(nodes) {
			div0 = claim_element(nodes, "DIV", { class: true });
			children(div0).forEach(detach_dev);
			t0 = claim_space(nodes);
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			h1 = claim_element(div2_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, /*title*/ ctx[0]);
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			if (default_slot) default_slot.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			footer = claim_element(div2_nodes, "FOOTER", { class: true });
			var footer_nodes = children(footer);
			if (footer_slot_or_fallback) footer_slot_or_fallback.l(footer_nodes);
			footer_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "modal-backdrop svelte-utgw0y");
			add_location(div0, file$1, 62, 0, 1013);
			attr_dev(h1, "class", "svelte-utgw0y");
			add_location(h1, file$1, 64, 4, 1141);
			attr_dev(div1, "class", "content svelte-utgw0y");
			add_location(div1, file$1, 65, 4, 1163);
			attr_dev(footer, "class", "svelte-utgw0y");
			add_location(footer, file$1, 68, 4, 1220);
			attr_dev(div2, "class", "modal svelte-utgw0y");
			add_location(div2, file$1, 63, 0, 1089);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div0, anchor);
			insert_dev(target, t0, anchor);
			insert_dev(target, div2, anchor);
			append_dev(div2, h1);
			append_dev(h1, t1);
			append_dev(div2, t2);
			append_dev(div2, div1);

			if (default_slot) {
				default_slot.m(div1, null);
			}

			append_dev(div2, t3);
			append_dev(div2, footer);

			if (footer_slot_or_fallback) {
				footer_slot_or_fallback.m(footer, null);
			}

			current = true;

			if (!mounted) {
				dispose = listen_dev(div0, "click", /*closeModal*/ ctx[1], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*title*/ 1) set_data_dev(t1, /*title*/ ctx[0]);

			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 8) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[3], dirty, null, null);
				}
			}

			if (footer_slot) {
				if (footer_slot.p && dirty & /*$$scope*/ 8) {
					update_slot(footer_slot, footer_slot_template, ctx, /*$$scope*/ ctx[3], dirty, get_footer_slot_changes, get_footer_slot_context);
				}
			}
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!div0_transition) div0_transition = create_bidirectional_transition(div0, fade, {}, true);
				div0_transition.run(1);
			});

			transition_in(default_slot, local);
			transition_in(footer_slot_or_fallback, local);

			add_render_callback(() => {
				if (!div2_transition) div2_transition = create_bidirectional_transition(div2, fly, { y: 300 }, true);
				div2_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!div0_transition) div0_transition = create_bidirectional_transition(div0, fade, {}, false);
			div0_transition.run(0);
			transition_out(default_slot, local);
			transition_out(footer_slot_or_fallback, local);
			if (!div2_transition) div2_transition = create_bidirectional_transition(div2, fly, { y: 300 }, false);
			div2_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div0);
			if (detaching && div0_transition) div0_transition.end();
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div2);
			if (default_slot) default_slot.d(detaching);
			if (footer_slot_or_fallback) footer_slot_or_fallback.d(detaching);
			if (detaching && div2_transition) div2_transition.end();
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Modal", slots, ['default','footer']);
	const dispatch = createEventDispatcher();
	let { title = "" } = $$props;

	function closeModal() {
		dispatch("cancelModal");
	}

	const writable_props = ["title"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Modal> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
		if ("$$scope" in $$props) $$invalidate(3, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({
		Button,
		createEventDispatcher,
		fade,
		fly,
		dispatch,
		title,
		closeModal
	});

	$$self.$inject_state = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [title, closeModal, slots, $$scope];
}

class Modal extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { title: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Modal",
			options,
			id: create_fragment$1.name
		});
	}

	get title() {
		throw new Error("<Modal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<Modal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

function isEmpty(val){
    if (!val) val='';
    val = val.trim();
    return val.length === 0; // return true/false
}

function validateEmailOrURL(value,type) {
    var re = '';
    if ( type == "email"){
        re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    }else if( type == "url"){
        re = /([a-z]+\:\/+)([^\/\s]*)([a-z0-9\-@\^=%&;\/~\+]*)[\?]?([^ \#]*)#?([^ \#]*)/ig;
    }
    return re.test(String(value).toLowerCase());
}

const meetups = writable([
    // {
    //     id: "m1",
    //     title: "Coding Bootcamp",
    //     subtitle: "Learn to code in 2 hours",
    //     description: "In this meetup, we will have some experts that teach you how to code!",
    //     imgURL: "https://media-exp1.licdn.com/dms/image/C4D03AQFfZOEXPOffZg/profile-displayphoto-shrink_200_200/0/1517231868765?e=1618444800&v=beta&t=b7tVtqB8u4g4BF9hQQpNI7Q8PvzTSfufa-l132JlObU",
    //     address: "XX Street Name, City, State PIN",
    //     contactEmail: "code@test.com",
    //     isFavorite: false
    // },
    // {
    //     id: "m2",
    //     title: "Swim Together",
    //     subtitle: "Let's go for some swimming",
    //     description: "We will simply swmming some rounds!",
    //     imgURL: "https://media-exp1.licdn.com/dms/image/C4D03AQFfZOEXPOffZg/profile-displayphoto-shrink_200_200/0/1517231868765?e=1618444800&v=beta&t=b7tVtqB8u4g4BF9hQQpNI7Q8PvzTSfufa-l132JlObU",
    //     address: "XX Street Name, City, State PIN",
    //     contactEmail: "swim@test.com",
    //     isFavorite: false
    // }
]);

function setMeetups(meetupsArr){
    meetups.set(meetupsArr);
}

function addMeetup(meetup){
    if (!meetup) return;

    const newMeetup = {
        ...meetup//,
        //id: Math.random().toString(),
        //isFavorite: false
    };

    meetups.update( items => {
        // DOESN'T WORK - AS ITS NOT TRIGGERD IN SVELTE TO INFORM TO RE-RENDER
        // ASSIGNMENT IS THE TRIGGERED IN SVELTE FOR RE-RENDERING.
        // meetups.push(meetup);  
        return [newMeetup, ...items];
    } );
}

function updateMeetup(currentID, currentMeetup){
    if ( !currentID || !currentMeetup ) return;    

    meetups.update( items => {
        let currentMeetupIdx = items.findIndex( item => item.id===currentID );
        let updatedMeetup = { ...items[currentMeetupIdx], ...currentMeetup };
        let updatedMeetups = [ ...items ];
        updatedMeetups[currentMeetupIdx] = updatedMeetup;
        return updatedMeetups;
    });
}

function deleteMeetup(meetupID){
    if ( !meetupID  ) return;    

    meetups.update( items => {      
        return items.filter( items => items.id!==meetupID );         
    });
}

function updateFavorite(meetupID){
    meetups.update( items =>{
        const updatedMeetups = [...items]; // copy of origianl 'meetups' array so no mutation.
        const updateMeetup = { ...items.find( m => m.id === meetupID ) }; // find the meetup which matches the id.
        const meetupIndex = items.findIndex( m => m.id === meetupID); // find the index of meetup that needs to be change.
        updateMeetup.isFavorite = !updateMeetup.isFavorite; // updating isFavorite - true -> false, false -> true
        updatedMeetups[meetupIndex] = updateMeetup; // update the object        
        return updatedMeetups;
    });
}

const meeteupStore = {
    subscribe: meetups.subscribe,
    setMeetups: (meetupArr) => setMeetups(meetupArr),
    addMeetup: (newMeetup) => addMeetup(newMeetup),
    updateMeetup: (currentID,currentMeetup) => updateMeetup(currentID,currentMeetup),
    deleteMeetup: (currentID) => deleteMeetup(currentID),
    updateFavorite: (meetupID) => updateFavorite(meetupID)
};

/* src\components\Meetups\EditMeetup.svelte generated by Svelte v3.35.0 */

const { Error: Error_1, console: console_1 } = globals;
const file$2 = "src\\components\\Meetups\\EditMeetup.svelte";

// (118:0) <Modal title="New Meetup" on:cancelModal>
function create_default_slot_3(ctx) {
	let form;
	let textinput0;
	let t0;
	let textinput1;
	let t1;
	let textinput2;
	let t2;
	let textinput3;
	let t3;
	let textinput4;
	let t4;
	let textinput5;
	let current;
	let mounted;
	let dispose;

	textinput0 = new TextInput({
			props: {
				id: "title",
				label: "Title",
				value: /*title*/ ctx[1],
				type: "text",
				valid: /*isTitleValid*/ ctx[7],
				validatyMessage: "Please enter title"
			},
			$$inline: true
		});

	textinput0.$on("input", /*input_handler*/ ctx[17]);

	textinput1 = new TextInput({
			props: {
				id: "subtitle",
				label: "Sub Title",
				value: /*subtitle*/ ctx[2],
				valid: /*isSubtitleValid*/ ctx[8],
				validatyMessage: "Please enter subtitle"
			},
			$$inline: true
		});

	textinput1.$on("input", /*input_handler_1*/ ctx[18]);

	textinput2 = new TextInput({
			props: {
				id: "description",
				label: "Description",
				value: /*description*/ ctx[3],
				controlType: "textarea",
				rows: "3",
				valid: /*isDescValid*/ ctx[9],
				validatyMessage: "Please enter description"
			},
			$$inline: true
		});

	textinput2.$on("input", /*input_handler_2*/ ctx[19]);

	textinput3 = new TextInput({
			props: {
				id: "url",
				label: "Image URL",
				value: /*imgURL*/ ctx[4],
				valid: /*isIMGValid*/ ctx[10],
				validatyMessage: "Please enter image url"
			},
			$$inline: true
		});

	textinput3.$on("input", /*input_handler_3*/ ctx[20]);

	textinput4 = new TextInput({
			props: {
				id: "address",
				label: "Address",
				value: /*address*/ ctx[5],
				valid: /*isAddressValid*/ ctx[11],
				validatyMessage: "Please enter address"
			},
			$$inline: true
		});

	textinput4.$on("input", /*input_handler_4*/ ctx[21]);

	textinput5 = new TextInput({
			props: {
				id: "emailID",
				label: "E-mail",
				value: /*email*/ ctx[6],
				type: "email",
				valid: /*isEmailValid*/ ctx[12],
				validatyMessage: "Please enter email"
			},
			$$inline: true
		});

	textinput5.$on("input", /*input_handler_5*/ ctx[22]);

	const block = {
		c: function create() {
			form = element("form");
			create_component(textinput0.$$.fragment);
			t0 = space();
			create_component(textinput1.$$.fragment);
			t1 = space();
			create_component(textinput2.$$.fragment);
			t2 = space();
			create_component(textinput3.$$.fragment);
			t3 = space();
			create_component(textinput4.$$.fragment);
			t4 = space();
			create_component(textinput5.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			form = claim_element(nodes, "FORM", { class: true });
			var form_nodes = children(form);
			claim_component(textinput0.$$.fragment, form_nodes);
			t0 = claim_space(form_nodes);
			claim_component(textinput1.$$.fragment, form_nodes);
			t1 = claim_space(form_nodes);
			claim_component(textinput2.$$.fragment, form_nodes);
			t2 = claim_space(form_nodes);
			claim_component(textinput3.$$.fragment, form_nodes);
			t3 = claim_space(form_nodes);
			claim_component(textinput4.$$.fragment, form_nodes);
			t4 = claim_space(form_nodes);
			claim_component(textinput5.$$.fragment, form_nodes);
			form_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(form, "class", "svelte-7xgq1w");
			add_location(form, file$2, 118, 4, 4558);
		},
		m: function mount(target, anchor) {
			insert_dev(target, form, anchor);
			mount_component(textinput0, form, null);
			append_dev(form, t0);
			mount_component(textinput1, form, null);
			append_dev(form, t1);
			mount_component(textinput2, form, null);
			append_dev(form, t2);
			mount_component(textinput3, form, null);
			append_dev(form, t3);
			mount_component(textinput4, form, null);
			append_dev(form, t4);
			mount_component(textinput5, form, null);
			current = true;

			if (!mounted) {
				dispose = listen_dev(form, "submit", prevent_default(/*saveForm*/ ctx[14]), false, true, false);
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			const textinput0_changes = {};
			if (dirty & /*title*/ 2) textinput0_changes.value = /*title*/ ctx[1];
			if (dirty & /*isTitleValid*/ 128) textinput0_changes.valid = /*isTitleValid*/ ctx[7];
			textinput0.$set(textinput0_changes);
			const textinput1_changes = {};
			if (dirty & /*subtitle*/ 4) textinput1_changes.value = /*subtitle*/ ctx[2];
			if (dirty & /*isSubtitleValid*/ 256) textinput1_changes.valid = /*isSubtitleValid*/ ctx[8];
			textinput1.$set(textinput1_changes);
			const textinput2_changes = {};
			if (dirty & /*description*/ 8) textinput2_changes.value = /*description*/ ctx[3];
			if (dirty & /*isDescValid*/ 512) textinput2_changes.valid = /*isDescValid*/ ctx[9];
			textinput2.$set(textinput2_changes);
			const textinput3_changes = {};
			if (dirty & /*imgURL*/ 16) textinput3_changes.value = /*imgURL*/ ctx[4];
			if (dirty & /*isIMGValid*/ 1024) textinput3_changes.valid = /*isIMGValid*/ ctx[10];
			textinput3.$set(textinput3_changes);
			const textinput4_changes = {};
			if (dirty & /*address*/ 32) textinput4_changes.value = /*address*/ ctx[5];
			if (dirty & /*isAddressValid*/ 2048) textinput4_changes.valid = /*isAddressValid*/ ctx[11];
			textinput4.$set(textinput4_changes);
			const textinput5_changes = {};
			if (dirty & /*email*/ 64) textinput5_changes.value = /*email*/ ctx[6];
			if (dirty & /*isEmailValid*/ 4096) textinput5_changes.valid = /*isEmailValid*/ ctx[12];
			textinput5.$set(textinput5_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(textinput0.$$.fragment, local);
			transition_in(textinput1.$$.fragment, local);
			transition_in(textinput2.$$.fragment, local);
			transition_in(textinput3.$$.fragment, local);
			transition_in(textinput4.$$.fragment, local);
			transition_in(textinput5.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(textinput0.$$.fragment, local);
			transition_out(textinput1.$$.fragment, local);
			transition_out(textinput2.$$.fragment, local);
			transition_out(textinput3.$$.fragment, local);
			transition_out(textinput4.$$.fragment, local);
			transition_out(textinput5.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(form);
			destroy_component(textinput0);
			destroy_component(textinput1);
			destroy_component(textinput2);
			destroy_component(textinput3);
			destroy_component(textinput4);
			destroy_component(textinput5);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3.name,
		type: "slot",
		source: "(118:0) <Modal title=\\\"New Meetup\\\" on:cancelModal>",
		ctx
	});

	return block;
}

// (175:8) <Button type="button" on:click="{closeModal}" mode="outline">
function create_default_slot_2(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Cancel");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Cancel");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2.name,
		type: "slot",
		source: "(175:8) <Button type=\\\"button\\\" on:click=\\\"{closeModal}\\\" mode=\\\"outline\\\">",
		ctx
	});

	return block;
}

// (176:8) <Button type="button" on:click="{saveForm}" disabled="{!isFormValid}" >
function create_default_slot_1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Save");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Save");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(176:8) <Button type=\\\"button\\\" on:click=\\\"{saveForm}\\\" disabled=\\\"{!isFormValid}\\\" >",
		ctx
	});

	return block;
}

// (177:8) {#if id}
function create_if_block$1(ctx) {
	let button;
	let current;

	button = new Button({
			props: {
				type: "button",
				$$slots: { default: [create_default_slot$1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button.$on("click", /*deleteMeetup*/ ctx[16]);

	const block = {
		c: function create() {
			create_component(button.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(button.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(button, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const button_changes = {};

			if (dirty & /*$$scope*/ 67108864) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(button, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(177:8) {#if id}",
		ctx
	});

	return block;
}

// (178:12) <Button type="button" on:click="{deleteMeetup}">
function create_default_slot$1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Delete");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Delete");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot$1.name,
		type: "slot",
		source: "(178:12) <Button type=\\\"button\\\" on:click=\\\"{deleteMeetup}\\\">",
		ctx
	});

	return block;
}

// (173:4) 
function create_footer_slot(ctx) {
	let div;
	let button0;
	let t0;
	let button1;
	let t1;
	let current;

	button0 = new Button({
			props: {
				type: "button",
				mode: "outline",
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", /*closeModal*/ ctx[15]);

	button1 = new Button({
			props: {
				type: "button",
				disabled: !/*isFormValid*/ ctx[13],
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*saveForm*/ ctx[14]);
	let if_block = /*id*/ ctx[0] && create_if_block$1(ctx);

	const block = {
		c: function create() {
			div = element("div");
			create_component(button0.$$.fragment);
			t0 = space();
			create_component(button1.$$.fragment);
			t1 = space();
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { slot: true });
			var div_nodes = children(div);
			claim_component(button0.$$.fragment, div_nodes);
			t0 = claim_space(div_nodes);
			claim_component(button1.$$.fragment, div_nodes);
			t1 = claim_space(div_nodes);
			if (if_block) if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "slot", "footer");
			add_location(div, file$2, 172, 4, 6629);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			mount_component(button0, div, null);
			append_dev(div, t0);
			mount_component(button1, div, null);
			append_dev(div, t1);
			if (if_block) if_block.m(div, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			const button0_changes = {};

			if (dirty & /*$$scope*/ 67108864) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};
			if (dirty & /*isFormValid*/ 8192) button1_changes.disabled = !/*isFormValid*/ ctx[13];

			if (dirty & /*$$scope*/ 67108864) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);

			if (/*id*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*id*/ 1) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block$1(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(div, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_component(button0);
			destroy_component(button1);
			if (if_block) if_block.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_footer_slot.name,
		type: "slot",
		source: "(173:4) ",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let modal;
	let current;

	modal = new Modal({
			props: {
				title: "New Meetup",
				$$slots: {
					footer: [create_footer_slot],
					default: [create_default_slot_3]
				},
				$$scope: { ctx }
			},
			$$inline: true
		});

	modal.$on("cancelModal", /*cancelModal_handler*/ ctx[23]);

	const block = {
		c: function create() {
			create_component(modal.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(modal.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(modal, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const modal_changes = {};

			if (dirty & /*$$scope, id, isFormValid, email, isEmailValid, address, isAddressValid, imgURL, isIMGValid, description, isDescValid, subtitle, isSubtitleValid, title, isTitleValid*/ 67125247) {
				modal_changes.$$scope = { dirty, ctx };
			}

			modal.$set(modal_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(modal.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(modal.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(modal, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let isTitleValid;
	let isSubtitleValid;
	let isDescValid;
	let isIMGValid;
	let isAddressValid;
	let isEmailValid;
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("EditMeetup", slots, []);
	let { id = null } = $$props;
	let title = "";
	let subtitle = "";
	let description = "";
	let imgURL = "";
	let address = "";
	let email = "";
	let updateMeetup = {};

	// component is subscribing to the store for any update only if it receives the 'id' parameter.
	// subscribe method return a function which is the unsubscribe itself and can be used by component to unsubscribe once its work is finish to avoid any memoery leak.    
	if (id) {
		const unsubscribe = meeteupStore.subscribe(items => {
			updateMeetup = items.find(item => item.id === id);
			$$invalidate(1, title = updateMeetup.title);
			$$invalidate(2, subtitle = updateMeetup.subtitle);
			$$invalidate(3, description = updateMeetup.description);
			$$invalidate(4, imgURL = updateMeetup.imgURL);
			$$invalidate(5, address = updateMeetup.address);
			$$invalidate(6, email = updateMeetup.contactEmail);
		});

		unsubscribe(); // unsubscribing the component as soons we updated the variable needed.
	}

	const dispatch = createEventDispatcher();

	function saveForm() {
		let saveMeetupObj = {};
		saveMeetupObj.title = title;
		saveMeetupObj.subtitle = subtitle;
		saveMeetupObj.description = description;
		saveMeetupObj.imgURL = imgURL;
		saveMeetupObj.address = address;
		saveMeetupObj.contactEmail = email;

		if (id) {
			fetch("https://svelte-course-20c5e-default-rtdb.firebaseio.com/meetups/" + id + ".json", {
				method: "PATCH", // syntax for firebase to UPDATE existing record.
				body: JSON.stringify(saveMeetupObj),
				headers: { "Content-Type": "application/json" }
			}).then(res => {
				if (!res.ok) {
					throw new Error("HTTP Update Meetup Error");
				}

				meeteupStore.updateMeetup(id, saveMeetupObj); // Local store update
			}).catch(err => {
				console.log(err);
			});
		} else {
			saveMeetupObj.isFavorite = false;

			fetch("https://svelte-course-20c5e-default-rtdb.firebaseio.com/meetups.json", {
				method: "POST",
				body: JSON.stringify(saveMeetupObj),
				headers: { "Content-Type": "application/json" }
			}).then(res => {
				if (!res.ok) {
					throw new Error("HTTP Add Meetup Error");
				}

				return res.json();
			}).then(data => {
				console.log("Add meetup data", data);
				saveMeetupObj.id = data.name; // id returned by the firebase
				meeteupStore.addMeetup(saveMeetupObj); // Local store add
			}).catch(err => {
				console.log(err);
			});
		}

		dispatch("saveMeetup");
	}

	function closeModal() {
		dispatch("cancelModal");
	}

	function deleteMeetup() {
		fetch("https://svelte-course-20c5e-default-rtdb.firebaseio.com/meetups/" + id + ".json", {
			method: "DELETE", // syntax for firebase to DELETE existing record.                
			
		}).then(res => {
			if (!res.ok) {
				throw new Error("HTTP delete Meetup Error");
			}

			meeteupStore.deleteMeetup(id); // Local store update
		}).catch(err => {
			console.log(err);
		});

		dispatch("saveMeetup");
	}

	let isFormValid = false;
	
	const writable_props = ["id"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<EditMeetup> was created with unknown prop '${key}'`);
	});

	const input_handler = event => $$invalidate(1, title = event.target.value);
	const input_handler_1 = event => $$invalidate(2, subtitle = event.target.value);
	const input_handler_2 = event => $$invalidate(3, description = event.target.value);
	const input_handler_3 = event => $$invalidate(4, imgURL = event.target.value);
	const input_handler_4 = event => $$invalidate(5, address = event.target.value);
	const input_handler_5 = event => $$invalidate(6, email = event.target.value);

	function cancelModal_handler(event) {
		bubble($$self, event);
	}

	$$self.$$set = $$props => {
		if ("id" in $$props) $$invalidate(0, id = $$props.id);
	};

	$$self.$capture_state = () => ({
		TextInput,
		Button,
		Modal,
		isEmpty,
		validateEmailOrURL,
		createEventDispatcher,
		meetups: meeteupStore,
		id,
		title,
		subtitle,
		description,
		imgURL,
		address,
		email,
		updateMeetup,
		dispatch,
		saveForm,
		closeModal,
		deleteMeetup,
		isFormValid,
		isTitleValid,
		isSubtitleValid,
		isDescValid,
		isIMGValid,
		isAddressValid,
		isEmailValid
	});

	$$self.$inject_state = $$props => {
		if ("id" in $$props) $$invalidate(0, id = $$props.id);
		if ("title" in $$props) $$invalidate(1, title = $$props.title);
		if ("subtitle" in $$props) $$invalidate(2, subtitle = $$props.subtitle);
		if ("description" in $$props) $$invalidate(3, description = $$props.description);
		if ("imgURL" in $$props) $$invalidate(4, imgURL = $$props.imgURL);
		if ("address" in $$props) $$invalidate(5, address = $$props.address);
		if ("email" in $$props) $$invalidate(6, email = $$props.email);
		if ("updateMeetup" in $$props) updateMeetup = $$props.updateMeetup;
		if ("isFormValid" in $$props) $$invalidate(13, isFormValid = $$props.isFormValid);
		if ("isTitleValid" in $$props) $$invalidate(7, isTitleValid = $$props.isTitleValid);
		if ("isSubtitleValid" in $$props) $$invalidate(8, isSubtitleValid = $$props.isSubtitleValid);
		if ("isDescValid" in $$props) $$invalidate(9, isDescValid = $$props.isDescValid);
		if ("isIMGValid" in $$props) $$invalidate(10, isIMGValid = $$props.isIMGValid);
		if ("isAddressValid" in $$props) $$invalidate(11, isAddressValid = $$props.isAddressValid);
		if ("isEmailValid" in $$props) $$invalidate(12, isEmailValid = $$props.isEmailValid);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*title*/ 2) {
			 $$invalidate(7, isTitleValid = !isEmpty(title));
		}

		if ($$self.$$.dirty & /*subtitle*/ 4) {
			 $$invalidate(8, isSubtitleValid = !isEmpty(subtitle));
		}

		if ($$self.$$.dirty & /*description*/ 8) {
			 $$invalidate(9, isDescValid = !isEmpty(description));
		}

		if ($$self.$$.dirty & /*imgURL*/ 16) {
			 $$invalidate(10, isIMGValid = validateEmailOrURL(imgURL, "url"));
		}

		if ($$self.$$.dirty & /*address*/ 32) {
			 $$invalidate(11, isAddressValid = !isEmpty(address));
		}

		if ($$self.$$.dirty & /*email*/ 64) {
			 $$invalidate(12, isEmailValid = validateEmailOrURL(email, "email"));
		}

		if ($$self.$$.dirty & /*isTitleValid, isSubtitleValid, isDescValid, isIMGValid, isAddressValid, isEmailValid*/ 8064) {
			 $$invalidate(13, isFormValid = isTitleValid && isSubtitleValid && isDescValid && isIMGValid && isAddressValid && isEmailValid);
		}
	};

	return [
		id,
		title,
		subtitle,
		description,
		imgURL,
		address,
		email,
		isTitleValid,
		isSubtitleValid,
		isDescValid,
		isIMGValid,
		isAddressValid,
		isEmailValid,
		isFormValid,
		saveForm,
		closeModal,
		deleteMeetup,
		input_handler,
		input_handler_1,
		input_handler_2,
		input_handler_3,
		input_handler_4,
		input_handler_5,
		cancelModal_handler
	];
}

class EditMeetup extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { id: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "EditMeetup",
			options,
			id: create_fragment$2.name
		});
	}

	get id() {
		throw new Error_1("<EditMeetup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error_1("<EditMeetup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\components\UI\Badge.svelte generated by Svelte v3.35.0 */
const file$3 = "src\\components\\UI\\Badge.svelte";

function create_fragment$3(ctx) {
	let span;
	let span_transition;
	let current;
	const default_slot_template = /*#slots*/ ctx[1].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[0], null);

	const block = {
		c: function create() {
			span = element("span");
			if (default_slot) default_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			if (default_slot) default_slot.l(span_nodes);
			span_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", "svelte-pdghry");
			add_location(span, file$3, 16, 0, 393);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);

			if (default_slot) {
				default_slot.m(span, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 1) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[0], dirty, null, null);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);

			add_render_callback(() => {
				if (!span_transition) span_transition = create_bidirectional_transition(span, fade, {}, true);
				span_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			if (!span_transition) span_transition = create_bidirectional_transition(span, fade, {}, false);
			span_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			if (default_slot) default_slot.d(detaching);
			if (detaching && span_transition) span_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Badge", slots, ['default']);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Badge> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("$$scope" in $$props) $$invalidate(0, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({ slide, fade });
	return [$$scope, slots];
}

class Badge extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Badge",
			options,
			id: create_fragment$3.name
		});
	}
}

/* src\components\Meetups\MeetupItem.svelte generated by Svelte v3.35.0 */

const { Error: Error_1$1, console: console_1$1 } = globals;
const file$4 = "src\\components\\Meetups\\MeetupItem.svelte";

// (98:10) {#if isFav}
function create_if_block$2(ctx) {
	let badge;
	let current;

	badge = new Badge({
			props: {
				$$slots: { default: [create_default_slot_3$1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(badge.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(badge.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(badge, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(badge.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(badge.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(badge, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$2.name,
		type: "if",
		source: "(98:10) {#if isFav}",
		ctx
	});

	return block;
}

// (99:12) <Badge>
function create_default_slot_3$1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("FAVORITE");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "FAVORITE");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3$1.name,
		type: "slot",
		source: "(99:12) <Badge>",
		ctx
	});

	return block;
}

// (112:8) <Button mode="outline" type="button" on:click="{ () => dispatch('edit',id) }">
function create_default_slot_2$1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Edit");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Edit");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2$1.name,
		type: "slot",
		source: "(112:8) <Button mode=\\\"outline\\\" type=\\\"button\\\" on:click=\\\"{ () => dispatch('edit',id) }\\\">",
		ctx
	});

	return block;
}

// (116:8) <Button             mode="outline"             color="{isFav ? null : 'success'}"             type="button"             loadingIcon="{isFavoriteInProgress}"            on:click="{toggleFavorite}" >
function create_default_slot_1$1(ctx) {
	let t_value = (/*isFav*/ ctx[6] ? "Unfavorite" : "Favorite") + "";
	let t;

	const block = {
		c: function create() {
			t = text(t_value);
		},
		l: function claim(nodes) {
			t = claim_text(nodes, t_value);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*isFav*/ 64 && t_value !== (t_value = (/*isFav*/ ctx[6] ? "Unfavorite" : "Favorite") + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1$1.name,
		type: "slot",
		source: "(116:8) <Button             mode=\\\"outline\\\"             color=\\\"{isFav ? null : 'success'}\\\"             type=\\\"button\\\"             loadingIcon=\\\"{isFavoriteInProgress}\\\"            on:click=\\\"{toggleFavorite}\\\" >",
		ctx
	});

	return block;
}

// (124:8) <Button type="button" href="/{id}">
function create_default_slot$2(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Show Detail");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Show Detail");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot$2.name,
		type: "slot",
		source: "(124:8) <Button type=\\\"button\\\" href=\\\"/{id}\\\">",
		ctx
	});

	return block;
}

function create_fragment$4(ctx) {
	let article;
	let header;
	let h1;
	let t0;
	let t1;
	let t2;
	let h2;
	let t3;
	let t4;
	let p0;
	let t5;
	let t6;
	let div0;
	let img;
	let img_src_value;
	let t7;
	let div1;
	let p1;
	let t8;
	let t9;
	let footer;
	let button0;
	let t10;
	let button1;
	let t11;
	let button2;
	let current;
	let if_block = /*isFav*/ ctx[6] && create_if_block$2(ctx);

	button0 = new Button({
			props: {
				mode: "outline",
				type: "button",
				$$slots: { default: [create_default_slot_2$1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", /*click_handler*/ ctx[10]);

	button1 = new Button({
			props: {
				mode: "outline",
				color: /*isFav*/ ctx[6] ? null : "success",
				type: "button",
				loadingIcon: /*isFavoriteInProgress*/ ctx[7],
				$$slots: { default: [create_default_slot_1$1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*toggleFavorite*/ ctx[8]);

	button2 = new Button({
			props: {
				type: "button",
				href: "/" + /*id*/ ctx[0],
				$$slots: { default: [create_default_slot$2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			article = element("article");
			header = element("header");
			h1 = element("h1");
			t0 = text(/*title*/ ctx[1]);
			t1 = space();
			if (if_block) if_block.c();
			t2 = space();
			h2 = element("h2");
			t3 = text(/*subtitle*/ ctx[2]);
			t4 = space();
			p0 = element("p");
			t5 = text(/*address*/ ctx[5]);
			t6 = space();
			div0 = element("div");
			img = element("img");
			t7 = space();
			div1 = element("div");
			p1 = element("p");
			t8 = text(/*description*/ ctx[4]);
			t9 = space();
			footer = element("footer");
			create_component(button0.$$.fragment);
			t10 = space();
			create_component(button1.$$.fragment);
			t11 = space();
			create_component(button2.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			article = claim_element(nodes, "ARTICLE", { id: true, class: true });
			var article_nodes = children(article);
			header = claim_element(article_nodes, "HEADER", { class: true });
			var header_nodes = children(header);
			h1 = claim_element(header_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, /*title*/ ctx[1]);
			t1 = claim_space(h1_nodes);
			if (if_block) if_block.l(h1_nodes);
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(header_nodes);
			h2 = claim_element(header_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t3 = claim_text(h2_nodes, /*subtitle*/ ctx[2]);
			h2_nodes.forEach(detach_dev);
			t4 = claim_space(header_nodes);
			p0 = claim_element(header_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t5 = claim_text(p0_nodes, /*address*/ ctx[5]);
			p0_nodes.forEach(detach_dev);
			header_nodes.forEach(detach_dev);
			t6 = claim_space(article_nodes);
			div0 = claim_element(article_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true, class: true });
			div0_nodes.forEach(detach_dev);
			t7 = claim_space(article_nodes);
			div1 = claim_element(article_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			p1 = claim_element(div1_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t8 = claim_text(p1_nodes, /*description*/ ctx[4]);
			p1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t9 = claim_space(article_nodes);
			footer = claim_element(article_nodes, "FOOTER", { class: true });
			var footer_nodes = children(footer);
			claim_component(button0.$$.fragment, footer_nodes);
			t10 = claim_space(footer_nodes);
			claim_component(button1.$$.fragment, footer_nodes);
			t11 = claim_space(footer_nodes);
			claim_component(button2.$$.fragment, footer_nodes);
			footer_nodes.forEach(detach_dev);
			article_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "svelte-ys5sx3");
			add_location(h1, file$4, 95, 8, 2119);
			attr_dev(h2, "class", "svelte-ys5sx3");
			add_location(h2, file$4, 101, 8, 2244);
			attr_dev(p0, "class", "svelte-ys5sx3");
			add_location(p0, file$4, 102, 8, 2273);
			attr_dev(header, "class", "svelte-ys5sx3");
			add_location(header, file$4, 94, 4, 2101);
			if (img.src !== (img_src_value = /*imgURL*/ ctx[3])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", /*title*/ ctx[1]);
			attr_dev(img, "class", "svelte-ys5sx3");
			add_location(img, file$4, 105, 8, 2339);
			attr_dev(div0, "class", "image svelte-ys5sx3");
			add_location(div0, file$4, 104, 4, 2310);
			attr_dev(p1, "class", "svelte-ys5sx3");
			add_location(p1, file$4, 108, 8, 2424);
			attr_dev(div1, "class", "content svelte-ys5sx3");
			add_location(div1, file$4, 107, 4, 2393);
			attr_dev(footer, "class", "svelte-ys5sx3");
			add_location(footer, file$4, 110, 4, 2470);
			attr_dev(article, "id", /*id*/ ctx[0]);
			attr_dev(article, "class", "svelte-ys5sx3");
			add_location(article, file$4, 93, 0, 2076);
		},
		m: function mount(target, anchor) {
			insert_dev(target, article, anchor);
			append_dev(article, header);
			append_dev(header, h1);
			append_dev(h1, t0);
			append_dev(h1, t1);
			if (if_block) if_block.m(h1, null);
			append_dev(header, t2);
			append_dev(header, h2);
			append_dev(h2, t3);
			append_dev(header, t4);
			append_dev(header, p0);
			append_dev(p0, t5);
			append_dev(article, t6);
			append_dev(article, div0);
			append_dev(div0, img);
			append_dev(article, t7);
			append_dev(article, div1);
			append_dev(div1, p1);
			append_dev(p1, t8);
			append_dev(article, t9);
			append_dev(article, footer);
			mount_component(button0, footer, null);
			append_dev(footer, t10);
			mount_component(button1, footer, null);
			append_dev(footer, t11);
			mount_component(button2, footer, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*title*/ 2) set_data_dev(t0, /*title*/ ctx[1]);

			if (/*isFav*/ ctx[6]) {
				if (if_block) {
					if (dirty & /*isFav*/ 64) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block$2(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(h1, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}

			if (!current || dirty & /*subtitle*/ 4) set_data_dev(t3, /*subtitle*/ ctx[2]);
			if (!current || dirty & /*address*/ 32) set_data_dev(t5, /*address*/ ctx[5]);

			if (!current || dirty & /*imgURL*/ 8 && img.src !== (img_src_value = /*imgURL*/ ctx[3])) {
				attr_dev(img, "src", img_src_value);
			}

			if (!current || dirty & /*title*/ 2) {
				attr_dev(img, "alt", /*title*/ ctx[1]);
			}

			if (!current || dirty & /*description*/ 16) set_data_dev(t8, /*description*/ ctx[4]);
			const button0_changes = {};

			if (dirty & /*$$scope*/ 4096) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};
			if (dirty & /*isFav*/ 64) button1_changes.color = /*isFav*/ ctx[6] ? null : "success";
			if (dirty & /*isFavoriteInProgress*/ 128) button1_changes.loadingIcon = /*isFavoriteInProgress*/ ctx[7];

			if (dirty & /*$$scope, isFav*/ 4160) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
			const button2_changes = {};
			if (dirty & /*id*/ 1) button2_changes.href = "/" + /*id*/ ctx[0];

			if (dirty & /*$$scope*/ 4096) {
				button2_changes.$$scope = { dirty, ctx };
			}

			button2.$set(button2_changes);

			if (!current || dirty & /*id*/ 1) {
				attr_dev(article, "id", /*id*/ ctx[0]);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);
			transition_in(button2.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			transition_out(button2.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(article);
			if (if_block) if_block.d();
			destroy_component(button0);
			destroy_component(button1);
			destroy_component(button2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$4.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$4($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("MeetupItem", slots, []);
	let { id } = $$props;
	let { title } = $$props;
	let { subtitle } = $$props;
	let { imgURL } = $$props;
	let { description } = $$props;
	let { address } = $$props;
	let { isFav } = $$props;
	let isFavoriteInProgress = false;

	function toggleFavorite() {
		$$invalidate(7, isFavoriteInProgress = true);

		fetch("https://svelte-course-20c5e-default-rtdb.firebaseio.com/meetups/" + id + ".json", {
			method: "PATCH", // syntax for firebase to update existing record.
			body: JSON.stringify({ isFavorite: !isFav }),
			headers: { "Content-Type": "application/json" }
		}).then(res => {
			if (!res.ok) {
				throw new Error("HTTP Update Favorite Meetup Error");
			}

			$$invalidate(7, isFavoriteInProgress = false);
			meeteupStore.updateFavorite(id); // Local store update
		}).catch(err => {
			$$invalidate(7, isFavoriteInProgress = false);
			console.log(err);
		});
	}

	const dispatch = createEventDispatcher();

	function showDetail() {
		dispatch("showDetail", id);
	}

	const writable_props = ["id", "title", "subtitle", "imgURL", "description", "address", "isFav"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$1.warn(`<MeetupItem> was created with unknown prop '${key}'`);
	});

	const click_handler = () => dispatch("edit", id);

	$$self.$$set = $$props => {
		if ("id" in $$props) $$invalidate(0, id = $$props.id);
		if ("title" in $$props) $$invalidate(1, title = $$props.title);
		if ("subtitle" in $$props) $$invalidate(2, subtitle = $$props.subtitle);
		if ("imgURL" in $$props) $$invalidate(3, imgURL = $$props.imgURL);
		if ("description" in $$props) $$invalidate(4, description = $$props.description);
		if ("address" in $$props) $$invalidate(5, address = $$props.address);
		if ("isFav" in $$props) $$invalidate(6, isFav = $$props.isFav);
	};

	$$self.$capture_state = () => ({
		Button,
		Badge,
		meetups: meeteupStore,
		createEventDispatcher,
		id,
		title,
		subtitle,
		imgURL,
		description,
		address,
		isFav,
		isFavoriteInProgress,
		toggleFavorite,
		dispatch,
		showDetail
	});

	$$self.$inject_state = $$props => {
		if ("id" in $$props) $$invalidate(0, id = $$props.id);
		if ("title" in $$props) $$invalidate(1, title = $$props.title);
		if ("subtitle" in $$props) $$invalidate(2, subtitle = $$props.subtitle);
		if ("imgURL" in $$props) $$invalidate(3, imgURL = $$props.imgURL);
		if ("description" in $$props) $$invalidate(4, description = $$props.description);
		if ("address" in $$props) $$invalidate(5, address = $$props.address);
		if ("isFav" in $$props) $$invalidate(6, isFav = $$props.isFav);
		if ("isFavoriteInProgress" in $$props) $$invalidate(7, isFavoriteInProgress = $$props.isFavoriteInProgress);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		id,
		title,
		subtitle,
		imgURL,
		description,
		address,
		isFav,
		isFavoriteInProgress,
		toggleFavorite,
		dispatch,
		click_handler
	];
}

class MeetupItem extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$4, create_fragment$4, safe_not_equal, {
			id: 0,
			title: 1,
			subtitle: 2,
			imgURL: 3,
			description: 4,
			address: 5,
			isFav: 6
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "MeetupItem",
			options,
			id: create_fragment$4.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*id*/ ctx[0] === undefined && !("id" in props)) {
			console_1$1.warn("<MeetupItem> was created without expected prop 'id'");
		}

		if (/*title*/ ctx[1] === undefined && !("title" in props)) {
			console_1$1.warn("<MeetupItem> was created without expected prop 'title'");
		}

		if (/*subtitle*/ ctx[2] === undefined && !("subtitle" in props)) {
			console_1$1.warn("<MeetupItem> was created without expected prop 'subtitle'");
		}

		if (/*imgURL*/ ctx[3] === undefined && !("imgURL" in props)) {
			console_1$1.warn("<MeetupItem> was created without expected prop 'imgURL'");
		}

		if (/*description*/ ctx[4] === undefined && !("description" in props)) {
			console_1$1.warn("<MeetupItem> was created without expected prop 'description'");
		}

		if (/*address*/ ctx[5] === undefined && !("address" in props)) {
			console_1$1.warn("<MeetupItem> was created without expected prop 'address'");
		}

		if (/*isFav*/ ctx[6] === undefined && !("isFav" in props)) {
			console_1$1.warn("<MeetupItem> was created without expected prop 'isFav'");
		}
	}

	get id() {
		throw new Error_1$1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error_1$1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get title() {
		throw new Error_1$1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error_1$1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get subtitle() {
		throw new Error_1$1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set subtitle(value) {
		throw new Error_1$1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get imgURL() {
		throw new Error_1$1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set imgURL(value) {
		throw new Error_1$1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get description() {
		throw new Error_1$1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set description(value) {
		throw new Error_1$1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get address() {
		throw new Error_1$1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set address(value) {
		throw new Error_1$1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isFav() {
		throw new Error_1$1("<MeetupItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isFav(value) {
		throw new Error_1$1("<MeetupItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src\components\Meetups\FilteredMeetup.svelte generated by Svelte v3.35.0 */
const file$5 = "src\\components\\Meetups\\FilteredMeetup.svelte";

function create_fragment$5(ctx) {
	let div;
	let button0;
	let t0;
	let t1;
	let button1;
	let t2;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div = element("div");
			button0 = element("button");
			t0 = text("All");
			t1 = space();
			button1 = element("button");
			t2 = text("Favorites");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			button0 = claim_element(div_nodes, "BUTTON", { type: true, class: true });
			var button0_nodes = children(button0);
			t0 = claim_text(button0_nodes, "All");
			button0_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			button1 = claim_element(div_nodes, "BUTTON", { type: true, class: true });
			var button1_nodes = children(button1);
			t2 = claim_text(button1_nodes, "Favorites");
			button1_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button0, "type", "button");
			attr_dev(button0, "class", "svelte-1iaz0ri");
			toggle_class(button0, "active", /*selectedFilterBtn*/ ctx[0] == 0);
			add_location(button0, file$5, 52, 4, 969);
			attr_dev(button1, "type", "button");
			attr_dev(button1, "class", "svelte-1iaz0ri");
			toggle_class(button1, "active", /*selectedFilterBtn*/ ctx[0] == 1);
			add_location(button1, file$5, 53, 4, 1074);
			attr_dev(div, "class", "svelte-1iaz0ri");
			add_location(div, file$5, 51, 0, 958);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, button0);
			append_dev(button0, t0);
			append_dev(div, t1);
			append_dev(div, button1);
			append_dev(button1, t2);

			if (!mounted) {
				dispose = [
					listen_dev(button0, "click", /*filter_all*/ ctx[1], false, false, false),
					listen_dev(button1, "click", /*filter_favorites*/ ctx[2], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*selectedFilterBtn*/ 1) {
				toggle_class(button0, "active", /*selectedFilterBtn*/ ctx[0] == 0);
			}

			if (dirty & /*selectedFilterBtn*/ 1) {
				toggle_class(button1, "active", /*selectedFilterBtn*/ ctx[0] == 1);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$5.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$5($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("FilteredMeetup", slots, []);
	const dispatch = createEventDispatcher();
	let selectedFilterBtn = 0;

	function filter_all() {
		$$invalidate(0, selectedFilterBtn = 0);
		dispatch("filterby", selectedFilterBtn);
	}

	function filter_favorites() {
		$$invalidate(0, selectedFilterBtn = 1);
		dispatch("filterby", selectedFilterBtn);
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<FilteredMeetup> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		createEventDispatcher,
		dispatch,
		selectedFilterBtn,
		filter_all,
		filter_favorites
	});

	$$self.$inject_state = $$props => {
		if ("selectedFilterBtn" in $$props) $$invalidate(0, selectedFilterBtn = $$props.selectedFilterBtn);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [selectedFilterBtn, filter_all, filter_favorites];
}

class FilteredMeetup extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$5, create_fragment$5, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "FilteredMeetup",
			options,
			id: create_fragment$5.name
		});
	}
}

/* src\components\UI\LoadingSpinner.svelte generated by Svelte v3.35.0 */

const file$6 = "src\\components\\UI\\LoadingSpinner.svelte";

function create_fragment$6(ctx) {
	let div13;
	let div12;
	let div0;
	let t0;
	let div1;
	let t1;
	let div2;
	let t2;
	let div3;
	let t3;
	let div4;
	let t4;
	let div5;
	let t5;
	let div6;
	let t6;
	let div7;
	let t7;
	let div8;
	let t8;
	let div9;
	let t9;
	let div10;
	let t10;
	let div11;
	let t11;
	let p;
	let t12;

	const block = {
		c: function create() {
			div13 = element("div");
			div12 = element("div");
			div0 = element("div");
			t0 = space();
			div1 = element("div");
			t1 = space();
			div2 = element("div");
			t2 = space();
			div3 = element("div");
			t3 = space();
			div4 = element("div");
			t4 = space();
			div5 = element("div");
			t5 = space();
			div6 = element("div");
			t6 = space();
			div7 = element("div");
			t7 = space();
			div8 = element("div");
			t8 = space();
			div9 = element("div");
			t9 = space();
			div10 = element("div");
			t10 = space();
			div11 = element("div");
			t11 = space();
			p = element("p");
			t12 = text(/*message*/ ctx[0]);
			this.h();
		},
		l: function claim(nodes) {
			div13 = claim_element(nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			div12 = claim_element(div13_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			div0 = claim_element(div12_nodes, "DIV", { class: true });
			children(div0).forEach(detach_dev);
			t0 = claim_space(div12_nodes);
			div1 = claim_element(div12_nodes, "DIV", { class: true });
			children(div1).forEach(detach_dev);
			t1 = claim_space(div12_nodes);
			div2 = claim_element(div12_nodes, "DIV", { class: true });
			children(div2).forEach(detach_dev);
			t2 = claim_space(div12_nodes);
			div3 = claim_element(div12_nodes, "DIV", { class: true });
			children(div3).forEach(detach_dev);
			t3 = claim_space(div12_nodes);
			div4 = claim_element(div12_nodes, "DIV", { class: true });
			children(div4).forEach(detach_dev);
			t4 = claim_space(div12_nodes);
			div5 = claim_element(div12_nodes, "DIV", { class: true });
			children(div5).forEach(detach_dev);
			t5 = claim_space(div12_nodes);
			div6 = claim_element(div12_nodes, "DIV", { class: true });
			children(div6).forEach(detach_dev);
			t6 = claim_space(div12_nodes);
			div7 = claim_element(div12_nodes, "DIV", { class: true });
			children(div7).forEach(detach_dev);
			t7 = claim_space(div12_nodes);
			div8 = claim_element(div12_nodes, "DIV", { class: true });
			children(div8).forEach(detach_dev);
			t8 = claim_space(div12_nodes);
			div9 = claim_element(div12_nodes, "DIV", { class: true });
			children(div9).forEach(detach_dev);
			t9 = claim_space(div12_nodes);
			div10 = claim_element(div12_nodes, "DIV", { class: true });
			children(div10).forEach(detach_dev);
			t10 = claim_space(div12_nodes);
			div11 = claim_element(div12_nodes, "DIV", { class: true });
			children(div11).forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			t11 = claim_space(div13_nodes);
			p = claim_element(div13_nodes, "P", { class: true });
			var p_nodes = children(p);
			t12 = claim_text(p_nodes, /*message*/ ctx[0]);
			p_nodes.forEach(detach_dev);
			div13_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "svelte-6kkc0y");
			add_location(div0, file$6, 110, 8, 2522);
			attr_dev(div1, "class", "svelte-6kkc0y");
			add_location(div1, file$6, 111, 8, 2543);
			attr_dev(div2, "class", "svelte-6kkc0y");
			add_location(div2, file$6, 112, 8, 2564);
			attr_dev(div3, "class", "svelte-6kkc0y");
			add_location(div3, file$6, 113, 8, 2585);
			attr_dev(div4, "class", "svelte-6kkc0y");
			add_location(div4, file$6, 114, 8, 2606);
			attr_dev(div5, "class", "svelte-6kkc0y");
			add_location(div5, file$6, 115, 8, 2627);
			attr_dev(div6, "class", "svelte-6kkc0y");
			add_location(div6, file$6, 116, 8, 2648);
			attr_dev(div7, "class", "svelte-6kkc0y");
			add_location(div7, file$6, 117, 8, 2669);
			attr_dev(div8, "class", "svelte-6kkc0y");
			add_location(div8, file$6, 118, 8, 2690);
			attr_dev(div9, "class", "svelte-6kkc0y");
			add_location(div9, file$6, 119, 8, 2711);
			attr_dev(div10, "class", "svelte-6kkc0y");
			add_location(div10, file$6, 120, 8, 2732);
			attr_dev(div11, "class", "svelte-6kkc0y");
			add_location(div11, file$6, 121, 8, 2753);
			attr_dev(div12, "class", "lds-default svelte-6kkc0y");
			add_location(div12, file$6, 109, 4, 2487);
			attr_dev(p, "class", "svelte-6kkc0y");
			add_location(p, file$6, 123, 4, 2786);
			attr_dev(div13, "class", "loadingContainer svelte-6kkc0y");
			add_location(div13, file$6, 107, 0, 2403);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div13, anchor);
			append_dev(div13, div12);
			append_dev(div12, div0);
			append_dev(div12, t0);
			append_dev(div12, div1);
			append_dev(div12, t1);
			append_dev(div12, div2);
			append_dev(div12, t2);
			append_dev(div12, div3);
			append_dev(div12, t3);
			append_dev(div12, div4);
			append_dev(div12, t4);
			append_dev(div12, div5);
			append_dev(div12, t5);
			append_dev(div12, div6);
			append_dev(div12, t6);
			append_dev(div12, div7);
			append_dev(div12, t7);
			append_dev(div12, div8);
			append_dev(div12, t8);
			append_dev(div12, div9);
			append_dev(div12, t9);
			append_dev(div12, div10);
			append_dev(div12, t10);
			append_dev(div12, div11);
			append_dev(div13, t11);
			append_dev(div13, p);
			append_dev(p, t12);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*message*/ 1) set_data_dev(t12, /*message*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div13);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$6.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$6($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("LoadingSpinner", slots, []);
	let { message = "" } = $$props;
	const writable_props = ["message"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<LoadingSpinner> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("message" in $$props) $$invalidate(0, message = $$props.message);
	};

	$$self.$capture_state = () => ({ message });

	$$self.$inject_state = $$props => {
		if ("message" in $$props) $$invalidate(0, message = $$props.message);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [message];
}

class LoadingSpinner extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$6, create_fragment$6, safe_not_equal, { message: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "LoadingSpinner",
			options,
			id: create_fragment$6.name
		});
	}

	get message() {
		throw new Error("<LoadingSpinner>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set message(value) {
		throw new Error("<LoadingSpinner>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

function flip(node, animation, params = {}) {
    const style = getComputedStyle(node);
    const transform = style.transform === 'none' ? '' : style.transform;
    const scaleX = animation.from.width / node.clientWidth;
    const scaleY = animation.from.height / node.clientHeight;
    const dx = (animation.from.left - animation.to.left) / scaleX;
    const dy = (animation.from.top - animation.to.top) / scaleY;
    const d = Math.sqrt(dx * dx + dy * dy);
    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;
    return {
        delay,
        duration: is_function(duration) ? duration(d) : duration,
        easing,
        css: (_t, u) => `transform: ${transform} translate(${u * dx}px, ${u * dy}px);`
    };
}

/* src\routes\index.svelte generated by Svelte v3.35.0 */

const { Error: Error_1$2, console: console_1$2 } = globals;
const file$7 = "src\\routes\\index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[13] = list[i];
	return child_ctx;
}

// (126:0) {#if editMode === 'edit'}
function create_if_block_2(ctx) {
	let editmeetup;
	let current;

	editmeetup = new EditMeetup({
			props: { id: /*editID*/ ctx[1] },
			$$inline: true
		});

	editmeetup.$on("saveMeetup", /*savedMeetup*/ ctx[5]);
	editmeetup.$on("cancelModal", /*cancelEdit*/ ctx[6]);

	const block = {
		c: function create() {
			create_component(editmeetup.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(editmeetup.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(editmeetup, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const editmeetup_changes = {};
			if (dirty & /*editID*/ 2) editmeetup_changes.id = /*editID*/ ctx[1];
			editmeetup.$set(editmeetup_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(editmeetup.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(editmeetup.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(editmeetup, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(126:0) {#if editMode === 'edit'}",
		ctx
	});

	return block;
}

// (132:0) {:else}
function create_else_block$1(ctx) {
	let section0;
	let filteredmeetup;
	let t0;
	let button;
	let t1;
	let section1;
	let t2;
	let each_blocks = [];
	let each_1_lookup = new Map();
	let current;
	filteredmeetup = new FilteredMeetup({ $$inline: true });
	filteredmeetup.$on("filterby", /*filterMeetups*/ ctx[3]);

	button = new Button({
			props: {
				$$slots: { default: [create_default_slot$3] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button.$on("click", /*startAdd*/ ctx[7]);
	let if_block = /*filteredMeetupsList*/ ctx[2].length === 0 && create_if_block_1$1(ctx);
	let each_value = /*filteredMeetupsList*/ ctx[2];
	validate_each_argument(each_value);
	const get_key = ctx => /*meetup*/ ctx[13].id;
	validate_each_keys(ctx, each_value, get_each_context, get_key);

	for (let i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	const block = {
		c: function create() {
			section0 = element("section");
			create_component(filteredmeetup.$$.fragment);
			t0 = space();
			create_component(button.$$.fragment);
			t1 = space();
			section1 = element("section");
			if (if_block) if_block.c();
			t2 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			section0 = claim_element(nodes, "SECTION", { id: true, class: true });
			var section0_nodes = children(section0);
			claim_component(filteredmeetup.$$.fragment, section0_nodes);
			t0 = claim_space(section0_nodes);
			claim_component(button.$$.fragment, section0_nodes);
			section0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			section1 = claim_element(nodes, "SECTION", { id: true, class: true });
			var section1_nodes = children(section1);
			if (if_block) if_block.l(section1_nodes);
			t2 = claim_space(section1_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(section1_nodes);
			}

			section1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(section0, "id", "meetup-controls");
			attr_dev(section0, "class", "svelte-1bgku22");
			add_location(section0, file$7, 132, 4, 3939);
			attr_dev(section1, "id", "meetups");
			attr_dev(section1, "class", "svelte-1bgku22");
			add_location(section1, file$7, 136, 4, 4108);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section0, anchor);
			mount_component(filteredmeetup, section0, null);
			append_dev(section0, t0);
			mount_component(button, section0, null);
			insert_dev(target, t1, anchor);
			insert_dev(target, section1, anchor);
			if (if_block) if_block.m(section1, null);
			append_dev(section1, t2);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(section1, null);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			const button_changes = {};

			if (dirty & /*$$scope*/ 65536) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);

			if (/*filteredMeetupsList*/ ctx[2].length === 0) {
				if (if_block) ; else {
					if_block = create_if_block_1$1(ctx);
					if_block.c();
					if_block.m(section1, t2);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*filteredMeetupsList, editMeetup*/ 260) {
				each_value = /*filteredMeetupsList*/ ctx[2];
				validate_each_argument(each_value);
				group_outros();
				for (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].r();
				validate_each_keys(ctx, each_value, get_each_context, get_key);
				each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, section1, fix_and_outro_and_destroy_block, create_each_block, null, get_each_context);
				for (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].a();
				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(filteredmeetup.$$.fragment, local);
			transition_in(button.$$.fragment, local);

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			transition_out(filteredmeetup.$$.fragment, local);
			transition_out(button.$$.fragment, local);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section0);
			destroy_component(filteredmeetup);
			destroy_component(button);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(section1);
			if (if_block) if_block.d();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].d();
			}
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block$1.name,
		type: "else",
		source: "(132:0) {:else}",
		ctx
	});

	return block;
}

// (130:0) {#if isLoading}
function create_if_block$3(ctx) {
	let loadingspinner;
	let current;

	loadingspinner = new LoadingSpinner({
			props: { message: "Fetching Meetups Data" },
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(loadingspinner.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(loadingspinner.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(loadingspinner, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(loadingspinner.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(loadingspinner.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(loadingspinner, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$3.name,
		type: "if",
		source: "(130:0) {#if isLoading}",
		ctx
	});

	return block;
}

// (135:8) <Button on:click="{startAdd}" >
function create_default_slot$3(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("New Meetup");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "New Meetup");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot$3.name,
		type: "slot",
		source: "(135:8) <Button on:click=\\\"{startAdd}\\\" >",
		ctx
	});

	return block;
}

// (138:8) {#if filteredMeetupsList.length===0}
function create_if_block_1$1(ctx) {
	let p;
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text("The Server has no meetups. Please start by adding one.");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "The Server has no meetups. Please start by adding one.");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "no-message svelte-1bgku22");
			add_location(p, file$7, 138, 12, 4192);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1$1.name,
		type: "if",
		source: "(138:8) {#if filteredMeetupsList.length===0}",
		ctx
	});

	return block;
}

// (144:8) {#each filteredMeetupsList as meetup (meetup.id) }
function create_each_block(key_1, ctx) {
	let div;
	let meetupitem;
	let t;
	let div_transition;
	let rect;
	let stop_animation = noop;
	let current;

	meetupitem = new MeetupItem({
			props: {
				id: /*meetup*/ ctx[13].id,
				title: /*meetup*/ ctx[13].title,
				subtitle: /*meetup*/ ctx[13].subtitle,
				imgURL: /*meetup*/ ctx[13].imgURL,
				description: /*meetup*/ ctx[13].description,
				address: /*meetup*/ ctx[13].address,
				email: /*meetup*/ ctx[13].contactEmail,
				isFav: /*meetup*/ ctx[13].isFavorite
			},
			$$inline: true
		});

	meetupitem.$on("edit", /*editMeetup*/ ctx[8]);

	const block = {
		key: key_1,
		first: null,
		c: function create() {
			div = element("div");
			create_component(meetupitem.$$.fragment);
			t = space();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", {});
			var div_nodes = children(div);
			claim_component(meetupitem.$$.fragment, div_nodes);
			t = claim_space(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(div, file$7, 144, 12, 4478);
			this.first = div;
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			mount_component(meetupitem, div, null);
			append_dev(div, t);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const meetupitem_changes = {};
			if (dirty & /*filteredMeetupsList*/ 4) meetupitem_changes.id = /*meetup*/ ctx[13].id;
			if (dirty & /*filteredMeetupsList*/ 4) meetupitem_changes.title = /*meetup*/ ctx[13].title;
			if (dirty & /*filteredMeetupsList*/ 4) meetupitem_changes.subtitle = /*meetup*/ ctx[13].subtitle;
			if (dirty & /*filteredMeetupsList*/ 4) meetupitem_changes.imgURL = /*meetup*/ ctx[13].imgURL;
			if (dirty & /*filteredMeetupsList*/ 4) meetupitem_changes.description = /*meetup*/ ctx[13].description;
			if (dirty & /*filteredMeetupsList*/ 4) meetupitem_changes.address = /*meetup*/ ctx[13].address;
			if (dirty & /*filteredMeetupsList*/ 4) meetupitem_changes.email = /*meetup*/ ctx[13].contactEmail;
			if (dirty & /*filteredMeetupsList*/ 4) meetupitem_changes.isFav = /*meetup*/ ctx[13].isFavorite;
			meetupitem.$set(meetupitem_changes);
		},
		r: function measure() {
			rect = div.getBoundingClientRect();
		},
		f: function fix() {
			fix_position(div);
			stop_animation();
			add_transform(div, rect);
		},
		a: function animate() {
			stop_animation();
			stop_animation = create_animation(div, rect, flip, {});
		},
		i: function intro(local) {
			if (current) return;
			transition_in(meetupitem.$$.fragment, local);

			add_render_callback(() => {
				if (!div_transition) div_transition = create_bidirectional_transition(div, scale, { duration: 300 }, true);
				div_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			transition_out(meetupitem.$$.fragment, local);
			if (!div_transition) div_transition = create_bidirectional_transition(div, scale, { duration: 300 }, false);
			div_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_component(meetupitem);
			if (detaching && div_transition) div_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(144:8) {#each filteredMeetupsList as meetup (meetup.id) }",
		ctx
	});

	return block;
}

function create_fragment$7(ctx) {
	let t0;
	let t1;
	let current_block_type_index;
	let if_block1;
	let if_block1_anchor;
	let current;
	let if_block0 = /*editMode*/ ctx[0] === "edit" && create_if_block_2(ctx);
	const if_block_creators = [create_if_block$3, create_else_block$1];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*isLoading*/ ctx[4]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx);
	if_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			t0 = space();
			if (if_block0) if_block0.c();
			t1 = space();
			if_block1.c();
			if_block1_anchor = empty();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1t197o\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			if (if_block0) if_block0.l(nodes);
			t1 = claim_space(nodes);
			if_block1.l(nodes);
			if_block1_anchor = empty();
			this.h();
		},
		h: function hydrate() {
			document.title = "All Meetups";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			if (if_block0) if_block0.m(target, anchor);
			insert_dev(target, t1, anchor);
			if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, if_block1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*editMode*/ ctx[0] === "edit") {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*editMode*/ 1) {
						transition_in(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_2(ctx);
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(t1.parentNode, t1);
				}
			} else if (if_block0) {
				group_outros();

				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				check_outros();
			}

			if_block1.p(ctx, dirty);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block0);
			transition_in(if_block1);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block0);
			transition_out(if_block1);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (if_block0) if_block0.d(detaching);
			if (detaching) detach_dev(t1);
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach_dev(if_block1_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$7.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload(page) {
	//console.log (page);
	return this.fetch("https://svelte-course-20c5e-default-rtdb.firebaseio.com/meetups.json").then(res => {
		if (!res.ok) {
			throw new Error("Fetch Meetup Data failed!");
		}

		// parse the json to javascript object and also returns the promise	to the next then clase
		return res.json();
	}).then(data => {
		const fetchedMeetups = [];

		for (let key in data) {
			fetchedMeetups.push({ id: key, ...data[key] });
		}

		// Object will return to this components into fetchedMeetups variable using 'export let fetchedMeetups' - line 41       
		return { fetchedMeetups: fetchedMeetups.reverse() };
	}).catch(err => {
		httpError = err;
		isLoading = false;
		console.log(err);
		this.error(500, "Custom Error Mesage - could not fetch meetups data"); // Error page (_error.svelte)
	});
}

function instance$7($$self, $$props, $$invalidate) {
	let filteredMeetupsList;
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Routes", slots, []);
	let { fetchedMeetups } = $$props;
	let favOnly = false;

	function filterMeetups(event) {
		$$invalidate(10, favOnly = event.detail === 1);
	}

	let editMode = null;
	let editID = null;
	let isLoading = false;
	let loadedMeetups = [];
	let unsubscribe;

	function savedMeetup() {
		$$invalidate(0, editMode = null);
		$$invalidate(1, editID = null);
	}

	function cancelEdit() {
		$$invalidate(0, editMode = null);
		$$invalidate(1, editID = null);
	}

	function startAdd() {
		$$invalidate(0, editMode = "edit");
	}

	function editMeetup(event) {
		$$invalidate(0, editMode = "edit");
		$$invalidate(1, editID = event.detail);
	}

	onMount(() => {
		unsubscribe = meeteupStore.subscribe(items => {
			$$invalidate(11, loadedMeetups = items);
		});

		meeteupStore.setMeetups(fetchedMeetups);
	});

	onDestroy(() => {
		if (unsubscribe) unsubscribe();
	});

	const writable_props = ["fetchedMeetups"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$2.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("fetchedMeetups" in $$props) $$invalidate(9, fetchedMeetups = $$props.fetchedMeetups);
	};

	$$self.$capture_state = () => ({
		preload,
		EditMeetup,
		MeetupItem,
		FilteredMeetup,
		Button,
		LoadingSpinner,
		meetups: meeteupStore,
		onMount,
		onDestroy,
		scale,
		flip,
		Badge,
		fetchedMeetups,
		favOnly,
		filterMeetups,
		editMode,
		editID,
		isLoading,
		loadedMeetups,
		unsubscribe,
		savedMeetup,
		cancelEdit,
		startAdd,
		editMeetup,
		filteredMeetupsList
	});

	$$self.$inject_state = $$props => {
		if ("fetchedMeetups" in $$props) $$invalidate(9, fetchedMeetups = $$props.fetchedMeetups);
		if ("favOnly" in $$props) $$invalidate(10, favOnly = $$props.favOnly);
		if ("editMode" in $$props) $$invalidate(0, editMode = $$props.editMode);
		if ("editID" in $$props) $$invalidate(1, editID = $$props.editID);
		if ("isLoading" in $$props) $$invalidate(4, isLoading = $$props.isLoading);
		if ("loadedMeetups" in $$props) $$invalidate(11, loadedMeetups = $$props.loadedMeetups);
		if ("unsubscribe" in $$props) unsubscribe = $$props.unsubscribe;
		if ("filteredMeetupsList" in $$props) $$invalidate(2, filteredMeetupsList = $$props.filteredMeetupsList);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*favOnly, loadedMeetups*/ 3072) {
			 $$invalidate(2, filteredMeetupsList = favOnly
			? loadedMeetups.filter(item => item.isFavorite)
			: loadedMeetups);
		}
	};

	return [
		editMode,
		editID,
		filteredMeetupsList,
		filterMeetups,
		isLoading,
		savedMeetup,
		cancelEdit,
		startAdd,
		editMeetup,
		fetchedMeetups,
		favOnly,
		loadedMeetups
	];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$7, create_fragment$7, safe_not_equal, { fetchedMeetups: 9 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$7.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*fetchedMeetups*/ ctx[9] === undefined && !("fetchedMeetups" in props)) {
			console_1$2.warn("<Routes> was created without expected prop 'fetchedMeetups'");
		}
	}

	get fetchedMeetups() {
		throw new Error_1$2("<Routes>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set fetchedMeetups(value) {
		throw new Error_1$2("<Routes>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Routes;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
